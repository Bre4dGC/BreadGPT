<Window
    x:Class="BreadGPT.View.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:comp="clr-namespace:BreadGPT.Compoments"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:style="clr-namespace:BreadGPT.Utilities"
    xmlns:vm="clr-namespace:BreadGPT.ViewModels"
    x:Name="Window"
    Title="MainWindow"
    Width="1100"
    Height="760"
    AllowsTransparency="True"
    Background="Transparent"
    KeyDown="Window_KeyDown"
    MouseLeftButtonDown="Window_MouseLeftButtonDown"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">

    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>

    <Window.Resources>
        <style:EqualityConverter x:Key="EqualityConverter" />

        <Style x:Key="SidebarStyle" TargetType="Border">
            <Setter Property="Width" Value="250" />
            <Setter Property="Background" Value="{StaticResource ControlBackground}" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="CornerRadius" Value="7 0 0 7" />
        </Style>

        <Style x:Key="ContentStyle" TargetType="Border">
            <Setter Property="Width" Value="1100" />
            <Setter Property="Background" Value="{StaticResource WindowBackground}" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="CornerRadius" Value="7" />
            <Setter Property="Panel.ZIndex" Value="1" />
        </Style>

        <Style x:Key="Logo" TargetType="TextBlock">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        </Style>

        <Style TargetType="ListBoxItem">
            <Setter Property="Height" Value="40" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Margin" Value="0,0,0,7" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Background="{TemplateBinding Background}" CornerRadius="7">
                            <ContentPresenter
                                Margin="5,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2f3740" />
                </Trigger>

                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#2f3740" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        </Style>

        <Style x:Key="Button" TargetType="ToggleButton">
            <Setter Property="Opacity" Value="0.6" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}" CornerRadius="7">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="ChatTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    Grid.Column="0"
                    Margin="5,0"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource Foreground}"
                    Text="{Binding Title}" />

                <Grid
                    x:Name="ActionGrid"
                    Grid.Column="1"
                    Visibility="Collapsed">

                    <ToggleButton Style="{StaticResource Button}">
                        <Image
                            Height="20"
                            RenderOptions.BitmapScalingMode="HighQuality"
                            Source="/Assets/more.png" />
                    </ToggleButton>

                    <Popup
                        Name="MyMenuPopup"
                        AllowsTransparency="True"
                        Placement="Right"
                        PopupAnimation="Fade"
                        StaysOpen="False">

                        <comp:ChatActionPopup />
                    </Popup>

                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                </Grid>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="MessagesTemplate">
            <comp:Message x:Name="Message" MessageContent="{Binding Text}" />

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=IsSendByUser}" Value="True">
                    <Setter Property="HorizontalAlignment" Value="Right" />
                    <Setter TargetName="Message" Property="Background" Value="{StaticResource AnswerBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsSendByUser}" Value="False">
                    <Setter Property="HorizontalAlignment" Value="Left" />
                    <Setter TargetName="Message" Property="Background" Value="{StaticResource ControlBackground}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </Window.Resources>

    <Border
        Background="{StaticResource WindowBackground}"
        BorderBrush="{StaticResource ControlBackground}"
        BorderThickness="1.5"
        CornerRadius="7">
        <Grid>
            <Border x:Name="Sidebar" Style="{StaticResource SidebarStyle}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <TextBlock
                        Grid.Row="0"
                        Style="{StaticResource Logo}"
                        Text="BreadGPT" />

                    <Border Grid.Row="1" Margin="10">
                        <ListBox
                            Background="Transparent"
                            BorderThickness="0"
                            ItemTemplate="{DynamicResource ChatTemplate}"
                            ItemsSource="{Binding Chats}"
                            SelectedItem="{Binding SelectedChat, Mode=TwoWay}" />
                    </Border>
                </Grid>
            </Border>

            <Border x:Name="Content" Style="{StaticResource ContentStyle}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid Margin="5,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                            <comp:TabButton
                                Width="45"
                                Height="55"
                                Margin="10,0,0,0"
                                ButtonClicked="Button_Click"
                                Icon="/Assets/menu.png"
                                IconSize="25" />
                            <comp:TabButton
                                Width="45"
                                Height="55"
                                Margin="10,0,0,0"
                                Command="{Binding CreateChatCommand}"
                                Icon="/Assets/create.png"
                                IconSize="20" />
                        </StackPanel>

                        <StackPanel Grid.Column="2" Orientation="Horizontal">
                            <comp:TabButton
                                Width="40"
                                Height="50"
                                ButtonClicked="TabButton_ButtonClicked_1"
                                Icon="/Assets/collapse.png"
                                IconSize="12" />
                            <comp:TabButton
                                Width="40"
                                Height="50"
                                ButtonClicked="TabButton_ButtonClicked"
                                Icon="/Assets/close.png"
                                IconSize="12" />
                        </StackPanel>
                    </Grid>

                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <ScrollViewer
                            x:Name="MessageScrollViewer"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Auto">
                            <ItemsControl
                                x:Name="MessageItemsControl"
                                Padding="30,0"
                                ItemTemplate="{DynamicResource MessagesTemplate}"
                                ItemsSource="{Binding SelectedChat.Messages}" />
                        </ScrollViewer>

                        <Border
                            Grid.Row="1"
                            Margin="0,0,0,15"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            Background="Transparent">
                            <comp:MessageInput
                                x:Name="Input"
                                Grid.Row="1"
                                Command="{Binding SendMessageCommand}"
                                Enabled="{Binding SendButtonEnabled}"
                                Text="{Binding TextMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Border>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </Border>
</Window>
